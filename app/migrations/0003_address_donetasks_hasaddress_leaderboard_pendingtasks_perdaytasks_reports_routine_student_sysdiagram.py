# Generated by Django 2.1.15 on 2023-01-14 09:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0002_auto_20230113_0051'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('addressid', models.IntegerField(db_column='AddressID', primary_key=True, serialize=False)),
                ('city', models.CharField(blank=True, db_column='City', max_length=15, null=True)),
                ('area', models.CharField(blank=True, db_column='Area', max_length=15, null=True)),
            ],
            options={
                'db_table': 'Address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Donetasks',
            fields=[
                ('taskid', models.IntegerField(db_column='TaskID', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=30, null=True)),
                ('postdate', models.DateField(blank=True, db_column='PostDate', null=True)),
                ('donedate', models.DateField(blank=True, db_column='DoneDate', null=True)),
            ],
            options={
                'db_table': 'DoneTasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pendingtasks',
            fields=[
                ('taskid', models.IntegerField(db_column='TaskID', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=30, null=True)),
                ('postdate', models.DateField(blank=True, db_column='PostDate', null=True)),
                ('done', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'PendingTasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Routine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostelite', models.CharField(blank=True, db_column='Hostelite', max_length=3, null=True)),
                ('allnighter', models.CharField(blank=True, db_column='AllNighter', max_length=3, null=True)),
                ('animefan', models.CharField(blank=True, db_column='AnimeFan', max_length=3, null=True)),
                ('gamegeek', models.CharField(blank=True, db_column='GameGeek', max_length=3, null=True)),
            ],
            options={
                'db_table': 'Routine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('studentid', models.IntegerField(db_column='StudentID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=30, null=True)),
                ('age', models.IntegerField(blank=True, db_column='Age', null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=6, null=True)),
                ('email', models.CharField(db_column='Email', max_length=30, unique=True)),
                ('phone', models.IntegerField(db_column='Phone', unique=True)),
                ('dp_name', models.CharField(blank=True, db_column='DP_Name', max_length=15, null=True)),
                ('blacklist', models.CharField(blank=True, db_column='Blacklist', max_length=3, null=True)),
                ('pic', models.CharField(blank=True, db_column='Pic', max_length=200, null=True)),
                ('points', models.IntegerField(blank=True, db_column='Points', null=True)),
                ('regdate', models.DateField(blank=True, db_column='regDate', null=True)),
                ('password', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sysdiagrams',
            fields=[
                ('name', models.CharField(max_length=128)),
                ('principal_id', models.IntegerField()),
                ('diagram_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('definition', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sysdiagrams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('uniname', models.CharField(db_column='UniName', max_length=60, primary_key=True, serialize=False)),
                ('campus', models.CharField(db_column='Campus', max_length=20)),
                ('campuslocation', models.CharField(blank=True, db_column='CampusLocation', max_length=30, null=True)),
            ],
            options={
                'db_table': 'University',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hasaddress',
            fields=[
                ('studentid', models.ForeignKey(db_column='StudentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app.Student')),
                ('isprimaryaddress', models.CharField(blank=True, db_column='isPrimaryAddress', max_length=3, null=True)),
            ],
            options={
                'db_table': 'HasAddress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('studentid', models.ForeignKey(db_column='StudentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app.Student')),
                ('points', models.IntegerField(blank=True, db_column='Points', null=True)),
                ('inmonth', models.CharField(blank=True, db_column='inMonth', max_length=10, null=True)),
                ('imageid', models.IntegerField(blank=True, db_column='imageId', null=True)),
            ],
            options={
                'db_table': 'LeaderBoard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Perdaytasks',
            fields=[
                ('studentid', models.ForeignKey(db_column='StudentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app.Student')),
                ('postnum', models.IntegerField(blank=True, db_column='PostNum', null=True)),
                ('optnum', models.IntegerField(blank=True, db_column='OptNum', null=True)),
                ('donenum', models.IntegerField(blank=True, db_column='DoneNum', null=True)),
            ],
            options={
                'db_table': 'PerDayTasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('studentid', models.ForeignKey(db_column='StudentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app.Student')),
                ('repdesc', models.CharField(blank=True, db_column='repDesc', max_length=30, null=True)),
                ('dateissued', models.DateField(blank=True, null=True)),
                ('kind', models.CharField(blank=True, db_column='Kind', max_length=15, null=True)),
            ],
            options={
                'db_table': 'Reports',
                'managed': False,
            },
        ),
    ]
